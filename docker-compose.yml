version: '2'

networks:
  prodnetwork:
    driver: bridge

services:
  nginx:
    restart: always
    image: nginx
    container_name: nginx
    networks:
      - prodnetwork
    ports:
        - "80:80"
        - "443:443"
    volumes:
        - "./volumes/etc/nginx/conf.d"
        - "./volumes/etc/nginx/vhost.d"
        - "./volumes/usr/share/nginx/html"
        - "./volumes/sslcerts:/etc/nginx/certs:ro"

  nginx-gen:
    restart: always
    networks:
      - prodnetwork
    image: jwilder/docker-gen
    container_name: nginx-gen
    volumes:
        - "/var/run/docker.sock:/tmp/docker.sock:ro"
        - "./volumes/proxy/templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
    volumes_from:
        - nginx
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  nexus:
    build: ./nexus
    ports:
      - "18081:8081"
    networks:
      - prodnetwork
    environment:
      - NEXUS_PORT=8081
      - SONAR_PORT=9000
      - SONAR_DB_PORT=5432
      - VIRTUAL_HOST=nexus.darno.love,www.nexus.darno.love

  jenkins:
    build: ./jenkins
    ports:
      - "18080:8080"
    networks:
      - prodnetwork
    volumes:
      - ./volumes/var/run/docker.sock:/var/run/docker.sock
      - ./volumes/usr/local/bin/docker:/usr/bin/docker
      - ./volumes/opt/jenkins/:/var/lib/jenkins/
    depends_on:
      - nexus
      - gitlab
      - sonar
    environment:
      - NEXUS_PORT=8081
      - SONAR_PORT=9000
      - SONAR_DB_PORT=5432
      - VIRTUAL_HOST=jenkins.darno.love,www.jenkins.darno.love

  sonar:
    build: ./sonar
    ports:
    - "19000:9000"
    - "5432:5432"
    networks:
      - prodnetwork
    depends_on:
      - sonardb
    environment:
    - SONARQUBE_JDBC_URL=jdbc:postgresql://sonardb:5432/sonar
    - SONARQUBE_JDBC_USERNAME=sonar
    - SONARQUBE_JDBC_PASSWORD=sonar
    - VIRTUAL_HOST=sonar.darno.love,www.sonar.darno.love

  sonardb:
    networks:
      - prodnetwork
    image: postgres
    environment:
    - POSTGRES_USER=sonar
    - POSTGRES_PASSWORD=sonar
    volumes:
      - ./volumes/opt/postgres/data:/var/lib/postgresql/data

  gitlab:
    image: gitlab/gitlab-ce
    restart: always
    networks:
      - prodnetwork
    environment:
      VIRTUAL_HOST: gitlab.darno.love,www.gitlab.darno.love
      GITLAB_OMNIBUS_CONFIG: |
        # external_url 'https://gitlab.example.com'
        # Add any other gitlab.rb configuration here, each on its own line
    ports:
      - "8081:80"
      - "8443:443"
      - "8222:22"
    volumes:
      - ./volumes/opt/gitlab/config:/etc/gitlab
      - ./volumes/opt/gitlab/logs:/var/log/gitlab
      - ./volumes/opt/gitlab/data:/var/opt/gitlab
